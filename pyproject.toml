# dependencies

[dependency-groups]
dev = [
    "HexBug-bot[data]",
    "ruff>=0.12.11",
    "pre-commit",
    "poethepoet>=0.32.2",
    "hatch>=1.13.0",
    "pytest>=8.3.5",
    "pytest-describe>=2.2.0",
]
notebooks = [
    "ipykernel>=6.29.5",
]

# uv

[tool.uv]
find-links = [
    "./vendor",
]
dependency-metadata = [
    { name = "hexdoc-hexdim", version = "1.2.1.1.20.0", requires-dist = [] },
    { name = "hexdoc-hexweb", version = "1.0.4.1.1", requires-dist = [] },
]

[tool.uv.workspace]
members = [
    "bot",
    "common",
    "infrastructure",
    "web",
]

[tool.uv.sources]
HexBug-bot = { workspace = true }

# poe

[tool.poe.tasks]
aws-cdk = "python -m HexBug.aws_cdk.app"
version = { cmd = "hatch version", cwd = "common" }

setup = ["_setup_sync", "_setup_pre-commit"]
_setup_sync = "uv sync"
_setup_pre-commit = "pre-commit install"

# pytest

[tool.pytest.ini_options]
testpaths = [
    "bot/test",
]
addopts = [
    "--import-mode=importlib",
]
filterwarnings = [
    'ignore:setDaemon\(\) is deprecated, set the daemon attribute instead:DeprecationWarning:javascript.events',
]

# linting/formatting

[tool.ruff]
preview = true
extend-exclude = [
    "**/venv",
    "**/.*",
    "**/node_modules",
    "**/__pycache__",
]

[tool.ruff.lint]
extend-select = [
    "I", # import sorting
    "RUF022", # __all__ sorting
    "TID252", # ban relative imports
]
extend-ignore = [
    # covered by Pyright
    "F821", # undefined variable
    "F401", # imported but unused
    "F841", # unused variable
]

[tool.ruff.lint.isort]
combine-as-imports = true
known-first-party = [
    "HexBug",
]
known-third-party = [
    "discord",
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

# type checking

[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "All"

include = [
    "bot/*",
    "common/*",
    "infrastructure/*",
    "web/*",
]
exclude = [
    "**/venv",
    "**/.*",
    "**/node_modules",
    "**/__pycache__",
]

typeCheckingMode = "basic"

strictDictionaryInference = true
strictListInference = true
strictSetInference = true

reportAssertAlwaysTrue = "error"
reportConstantRedefinition = "error"
reportDeprecated = "error"
reportFunctionMemberAccess = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportIncompleteStub = "error"
reportInconsistentConstructor = "error"
reportInvalidStringEscapeSequence = "error"
reportInvalidStubStatement = "error"
reportInvalidTypeVarUse = "error"
reportMatchNotExhaustive = "error"
reportMissingParameterType = "error"
reportOverlappingOverload = "error"
reportSelfClsParameterName = "error"
reportTypeCommentUsage = "error"
reportUnknownParameterType = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryContains = "error"
reportUnsupportedDunderAll = "error"
reportUntypedBaseClass = "error"
reportUntypedClassDecorator = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedNamedTuple = "error"
reportWildcardImportFromLibrary = "error"

reportMissingTypeArgument = "warning"
reportPrivateUsage = "warning"
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportUnknownVariableType = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnusedClass = "warning"
reportUnusedExpression = "warning"
reportUnusedFunction = "warning"
reportUnusedImport = "warning"
reportUnusedVariable = "warning"

reportMissingTypeStubs = "none"
reportDuplicateImport = "none"

[[tool.pyright.executionEnvironments]]
root = "bot/test"
reportUnusedFunction = "none"
