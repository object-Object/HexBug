[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# project metadata

[project]
name = "HexBug"
version = "0.1.0"
authors = [
    { name="object-Object" },
]
keywords = ["hexdoc"]
requires-python = ">=3.11,<3.12"
dependencies = [
    "typer~=0.9",
]

[project.optional-dependencies]
aws-cdk = [
    "aws-cdk-lib==2.102.0",
    "aws-cdk-github-oidc==2.4.0",
]
codedeploy = [
    "boto3~=1.34",
    "boto3-stubs-lite[s3,ssm]",
]
runtime = [
    "discord.py~=2.3.2",
    "hexdoc-hexgloop @ https://github.com/SamsTheNerd/HexGloop/raw/af72e6cc318d/docs/v/latest/main/dist/hexdoc_hexgloop-0.2.1.1.0.dev0-py3-none-any.whl",
    "hexdoc-hexal==0.2.19.1.0.dev0",
    "hexdoc-hexbound==0.1.4.1.19.2.1.0.dev2",
    "hexdoc-hexkeys==0.1.3.1.0.dev0",
    "hexdoc-mediaworks==1.0.6.1.0.dev0",
    "hexdoc-oneironaut==0.3.4.1.0",
    "hexdoc-hexdebug==0.2.2.1.19.2.1.0",
    "hexdoc-hexcellular==1.0.2.1.0.dev0",
    "hexdoc==1!0.1.0a18",
    "importlib_resources>=5.10",
    "jproperties~=2.1",
    "lark[interegular]~=1.1",
    "matplotlib~=3.6",
    "networkx~=3.1",
    "numpy~=1.23",
    "pillow~=9.5",
    "python-dotenv~=0.21",
    "ruff~=0.1.4,!=0.1.12",
    "semver~=3.0",
    "sty~=1.0",
    "typing_extensions~=4.7",
    "hex-renderer-py~=0.1.2",
    "hexnumgen>=0.2.0",
]
target-any = [
    "hexnumgen @ git+https://github.com/object-Object/hexnumgen-rs.git@70d683ee9b",
]
test = [
    "pytest~=8.1",
]
dev = [
    "HexBug[aws-cdk,codedeploy,runtime,test]",
    "nox",
    "tqdm",
]

[project.urls]
Source = "https://github.com/object-Object/HexBug"

[tool.hatch.metadata]
allow-direct-references = true

# directory inclusion

[tool.hatch.build]
include = [
    "src/HexBug",
    "vendor/*",
    "scripts",
    "main.py",
    "gradle.properties",
]

[tool.hatch.build.targets.wheel]
sources = [
    "src",
    "vendor",
]

# hexdoc entry points

[project.entry-points.hexdoc]
hexbug = "HexBug._hooks:HexBugPlugin"

# other tools

[tool.pytest.ini_options]
testpaths = ["test"]
pythonpath = ["."]
addopts = [
    "--import-mode=importlib",
]
filterwarnings = [
    'ignore:setDaemon\(\) is deprecated, set the daemon attribute instead:DeprecationWarning:javascript.events',
]

[tool.pyright]
pythonVersion = "3.11"
pythonPlatform = "All"

include = [
    "src",
    "test",
    "scripts",
    "main.py",
]
extraPaths = [
    "vendor",
]
exclude = [
    "venv",
    ".*",
    "out",
    "_site",
]

enableExperimentalFeatures = true

typeCheckingMode = "basic"

# strictDictionaryInference = true
# strictListInference = true
# strictSetInference = true

# reportAssertAlwaysTrue = "error"
# reportConstantRedefinition = "error"
# reportDeprecated = "error"
# reportDuplicateImport = "error"
# reportFunctionMemberAccess = "error"
# reportIncompatibleMethodOverride = "error"
# reportIncompleteStub = "error"
# reportInconsistentConstructor = "error"
# reportInvalidStringEscapeSequence = "error"
# reportInvalidStubStatement = "error"
# reportInvalidTypeVarUse = "error"
# reportMatchNotExhaustive = "error"
# reportMissingParameterType = "error"
# reportMissingTypeStubs = "error"
# reportOverlappingOverload = "error"
# reportSelfClsParameterName = "error"
# reportTypeCommentUsage = "error"
# reportUnknownParameterType = "error"
# reportUnnecessaryCast = "error"
# reportUnnecessaryContains = "error"
# reportUnsupportedDunderAll = "error"
# reportUntypedBaseClass = "error"
# reportUntypedClassDecorator = "error"
# reportUntypedFunctionDecorator = "error"
# reportUntypedNamedTuple = "error"
# reportWildcardImportFromLibrary = "error"

# reportMissingTypeArgument = "warning"
# reportPrivateUsage = "warning"
# reportUnnecessaryComparison = "warning"
# reportUnnecessaryIsInstance =  	"warning"
# reportUnusedClass = "warning"
# reportUnusedExpression = "warning"
# reportUnusedFunction = "warning"
# reportUnusedImport = "warning"
# reportUnusedVariable = "warning"

# TODO: move back to warning
reportUnknownLambdaType = "none"
reportUnknownArgumentType = "none"
reportUnknownMemberType = "none"

reportUnknownVariableType = "none"
reportIncompatibleVariableOverride = "none"
