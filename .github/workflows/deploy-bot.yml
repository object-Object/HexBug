name: '[Reusable] Deploy bot'

on:
  workflow_call:
    inputs:
      stage:
        type: string
        required: true
      image-digest:
        type: string
        required: true

jobs:
  deploy-aws-cdk:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment:
      name: ${{ inputs.stage }}-aws-cdk
    concurrency:
      group: deploy-aws-cdk
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4

      - uses: object-Object/ci/setup@v0
        with:
          node-version: 'lts/*'
          npm-packages: aws-cdk
          role-to-assume: repo

      - name: Download synth artifact
        uses: actions/download-artifact@v4
        with:
          name: aws-cdk-synth
          path: cdk.out

      - name: Deploy stack
        run: cdk deploy --ci --no-lookups --require-approval=never --app=cdk.out --outputs-file=outputs.json ${{ inputs.stage }}

      - name: Upload outputs artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.stage }}-aws-cdk-outputs
          path: outputs.json

  deploy-codedeploy:
    needs: deploy-aws-cdk
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    environment:
      name: ${{ inputs.stage }}-codedeploy
      url: ${{ steps.deploy.outputs.deployment-url }}
    concurrency:
      group: deploy-codedeploy
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4

      - name: Download outputs artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.stage }}-aws-cdk-outputs

      - name: Parse outputs
        id: parse
        uses: object-Object/ci/parse-cdk-outputs@v0
        with:
          file: outputs.json

      - uses: object-Object/ci/setup@v0
        with:
          role-to-assume: ${{ steps.parse.outputs.ActionsCodeDeployRoleARN }}

      - name: Create runtime files
        working-directory: codedeploy
        run: |
          sed -i -e 's/\$APPLICATION_NAME/${{ steps.parse.outputs.ApplicationName }}/g' appspec.yml

          cat <<END_OF_FILE > .env
          IMAGE="${{ inputs.image-digest }}"
          ENVIRONMENT="${{ inputs.stage }}"
          TOKEN="${{ secrets.DISCORD_TOKEN }}"
          DEPLOYMENT="{}"
          DEPLOYMENT__COMMIT_SHA="${{ github.sha }}"
          DEPLOYMENT__COMMIT_TIMESTAMP="$(git show --no-patch --format=%at ${{ github.sha }})"
          DEPLOYMENT__COMMIT_MESSAGE="$(git log --oneline --format=%B -n 1 ${{ github.sha }} | head -n 1)"
          END_OF_FILE

      - name: Deploy application
        id: deploy
        uses: object-Object/ci/deploy-codedeploy@v0
        with:
          path: codedeploy
          stack: ${{ steps.parse.outputs.stack-name }}
          application: ${{ steps.parse.outputs.ApplicationName }}
          deployment-group: ${{ steps.parse.outputs.DeploymentGroupName }}
          s3-bucket: ${{ steps.parse.outputs.ArtifactsBucketName }}
