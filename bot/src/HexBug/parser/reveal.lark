%import common.NUMBER -> UNSIGNED_NUMBER
%import common.INT -> _INT
%import common (WORD, WS)

%ignore WS

// rules

start: iota

?iota: _non_pattern_iota | pattern
_non_pattern_iota: jump
                 | call
                 | matrix
                 | list
                 | vector
                 | number
                 | boolean
                 | null
                 | string
                 | unknown

jump: "[" "Jump" ( "->" "(" _delimited{JUMP_FRAME, ","}? ")" )? "]"

call: "[" "Call" "->" "(" _delimited{JUMP_FRAME, ","}? ")" "]"

list: "[" _delimited{_list_item, ","}? "]"
_list_item: _non_pattern_iota | pattern+

pattern: "HexPattern" "(" DIRECTION ANGLES? ")"
       | "<" DIRECTION ","? ANGLES? ">"
       | "HexPattern" "[" DIRECTION "," ANGLES? "]"

vector: "(" NUMBER "," NUMBER "," NUMBER ")"

matrix.1: "[" "(" INT "," INT ")" ( "|" matrix_rows )? "]"
matrix_rows: _delimited{matrix_row, ";"}
matrix_row: _delimited{NUMBER, ","}

number: NUMBER

boolean: BOOLEAN

null: "null"i

string: STRING

unknown: UNKNOWN | JUMP_FRAME

// terminals

DIRECTION: ( ( "north"i | "south"i ) "_"? )? ( "west"i | "east"i )
ANGLES: /[aqweds]+/i

NUMBER: "-"? UNSIGNED_NUMBER
INT.1: _INT

BOOLEAN: "true"i | "false"i

STRING: "\"" /[^"]*/ "\""

JUMP_FRAME.-1: /[a-zA-Z]+/ "*"?

UNKNOWN.-2: /[^\n\[\]\,]+/

// templates

_delimited{value, separator}: value ( separator value )*
